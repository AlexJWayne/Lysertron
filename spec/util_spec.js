// Generated by CoffeeScript 1.3.3
(function() {

  describe('Utils', function() {
    describe('Array::random()', function() {
      var oldRnd;
      oldRnd = Math.random;
      after(function() {
        return Math.random = oldRnd;
      });
      return it('returns a random element', function() {
        Math.random = function() {
          return 0;
        };
        [1, 2, 3].random().should.equal(1);
        Math.random = function() {
          return 0.49;
        };
        [1, 2, 3].random().should.equal(2);
        Math.random = function() {
          return 0.99;
        };
        return [1, 2, 3].random().should.equal(3);
      });
    });
    describe('THREE.Vector3.temp()', function() {
      it('always returns the same object', function() {
        var v1, v2;
        v1 = THREE.Vector3.temp();
        v2 = THREE.Vector3.temp();
        return v1.should.be.equal(v2);
      });
      it('accepts a vector to copy', function() {
        var v;
        v = new THREE.Vector3(1, 2, 3);
        THREE.Vector3.temp(v).x.should.equal(1);
        THREE.Vector3.temp(v).y.should.equal(2);
        return THREE.Vector3.temp(v).z.should.equal(3);
      });
      it('accepts a single float to use as all 3 values', function() {
        var v;
        v = THREE.Vector3.temp(9);
        v.x.should.equal(9);
        v.y.should.equal(9);
        return v.z.should.equal(9);
      });
      return it('accepts 3 floats to use for x, y, and z', function() {
        var v;
        v = THREE.Vector3.temp(7, 8, 9);
        v.x.should.equal(7);
        v.y.should.equal(8);
        return v.z.should.equal(9);
      });
    });
    describe('Number::rad', function() {
      return it("returns the radian value of this number, assuming it's in degrees", function() {
        return 180..rad.should.equal(Math.PI);
      });
    });
    return describe('Number::deg', function() {
      return it("returns the degree value of this number, assuming it's in radians", function() {
        return Math.PI.deg.should.equal(180);
      });
    });
  });

}).call(this);
