// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Component.Rotator = (function(_super) {

    __extends(Rotator, _super);

    function Rotator(_arg) {
      var strat, strats;
      this.maxPitch = _arg.maxPitch, this.maxRoll = _arg.maxRoll;
      Rotator.__super__.constructor.apply(this, arguments);
      this.maxPitch || (this.maxPitch = 30);
      this.maxRoll || (this.maxRoll = 60);
      strats = [[0, this.maxRoll], [this.maxPitch, 0], [0, 0], [this.maxPitch, this.maxRoll]];
      strat = strats[THREE.Math.randInt(1, strats.length) - 1];
      this.rotSpeed = new THREE.Vector2(strat[0] * Math.PI / 180, strat[1] * Math.PI / 180);
    }

    Rotator.prototype.update = function(elapsed) {
      this.obj.rotation.z += this.rotSpeed.x * elapsed;
      return this.obj.rotation.x += this.rotSpeed.y * elapsed;
    };

    return Rotator;

  })(Component);

}).call(this);
