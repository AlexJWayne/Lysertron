#!/usr/bin/env coffee

# HOST = 'http://localhost:3000/'
HOST = 'http://lysertron.com/'

UglifyJS = require 'uglify-js'
request = require 'request'
path = require 'path'
fs   = require 'fs'
prompt = require 'prompt'
argv = require('optimist').argv

root = path.join path.dirname(fs.realpathSync(__filename)), '..'
lib  = path.join root, 'lib'

projectRoot = process.cwd()

authFilePath = path.join projectRoot, 'auth.json'

layerCompiler = require path.join(lib, 'layer')
manifest = require path.join(lib, 'manifest')

[command, options...] = argv._

switch command
  when undefined, 'server'
    app = require path.join(lib, '/server')
    port = options[0] || 3001

    console.log "Started server at http://localhost:#{port}/"
    app.listen port

  when 'publish'
    authKeys =
      if fs.existsSync authFilePath
        JSON.parse fs.readFileSync(authFilePath)

      else
        prompt.start()
        keyMsg = 'Enter Your API Key - See http://lysertron.com/users/edit'
        prompt.get [keyMsg], (err, result) ->
          fs.writeFileSync authFilePath,
            """
            {
              "lysertron": "#{result[keyMsg]}"
            }
            """
        
          console.log "API Key added to auth.json. Please try to publish again."

        null


    if authKeys
      [type, name] = options
      layers = []

      if type && name
        echoes = ["#{type}/#{name}"]
      else
        manifest.findLayers (err, layerPaths) -> layers = layerPaths
      
      for layerPath in layers
        do (layerPath, type, name) ->
          [type, name] = layerPath.split('/')
          
          # meta = layerCompiler.compileMeta type, name
          # meta.content = layerCompiler.compile type, name

          code = layerCompiler.compile type, name

          request.post "#{HOST}layers.js", json: { token: authKeys.lysertron, layer: { code, location: type, name } }, (err, res, body) ->
            if err
              console.log "Error: #{err}"
            else if ! /^2/.test res.statusCode.toString()
              console.log "Server Error: #{res.statusCode} #{res.body}"
            else
              console.log "Uploaded: #{type} #{name}"